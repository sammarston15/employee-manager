{"version":3,"sources":["Components/Main/Main.js","Components/Login/Login.js","Components/Signup/Signup.js","Components/Main/Timecard/Timecard.js","App.js","serviceWorker.js","index.js"],"names":["Main","adminUserStyle","_this","props","loggedIn","adminUser","react_default","a","createElement","react_router_dom","to","_this$props","this","firstName","lastName","handleClockIn","handleClockOut","clockedIn","totalHours","console","log","className","onClick","killSession","hh","mm","style","color","Component","Login","onKeyPress","e","which","handleLogin","username","password","type","placeholder","onChange","handleChange","name","value","Signup","handleSignup","Timecard","getThoseHours","hours","timeMap","map","day","i","timeIn","moment","timeOut","total","duration","diff","minutes","seconds","format","concat","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","defineProperty","target","asyncToGenerator","regenerator_default","mark","_callee","body","_ref2","wrap","_context","prev","next","state","axios","post","sent","data","history","push","alert","t0","error","stop","_callee2","_this$state","loginResponse","_loginResponse$data","user","message","_context2","first_name","last_name","employeeId","user_id","admin_user","get","then","response","clockedOut","catch","displayTotalHours","_callee3","_ref5","_context3","_this$state2","clockedInAt","_this$state3","clockedOutAt","put","time_in","time_out","date","_this2","_this3","react_router","exact","path","component","Main_Main","render","Timecard_Timecard","Login_Login","Signup_Signup","withRouter","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3dee6454.chunk.js","sourcesContent":["import React, { Component } from 'react';\n// import axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport './main.css';\n\n\n\nexport default class Main extends Component {\n\n  adminUserStyle = () => {\n    if (this.props.loggedIn === true && this.props.adminUser === true) {\n      return (\n        <Link to='/employees'>\n          <button>EMPLOYEES</button>\n        </Link>\n      )\n    }\n    if (this.props.loggedIn === true) {\n      return (\n        <Link to='/timecard'>\n          <button>TIMECARD</button>\n        </Link>\n      )\n    }\n  }\n\n  // handleChange = (e) => this.setState({ [e.target.name]: e.target.value })\n\n\n  render() {\n\n    const { firstName, lastName, loggedIn, handleClockIn, handleClockOut, clockedIn, totalHours, adminUser } = this.props;\n    console.log(this.props);\n    // debugger\n    const clockedOutStyle = {color: 'red'};\n    const clockedInStyle = {color: 'green'};\n\n\n\n    //Admin user style classnames\n    const adminStyleHome = 'admin-style-home';\n    const adminStyleNav = 'admin-style-nav';\n\n\n\n\n\n    return (\n      <div className=\"main\">\n        <div className=\"header-container\">\n          {!loggedIn ?\n          <div className=\"navbar-left\">PROLINE TIME&copy;</div>\n          :\n          <div className=\"navbar-left\">{firstName} {lastName}</div>\n          }\n\n          <div className=\"navbar-right\">\n            <Link to='/'>\n              <button>HOME</button>\n            </Link>\n            { !loggedIn ?\n              <Link to='/about'>\n                <button>ABOUT</button>\n              </Link>\n              : \n              this.adminUserStyle()\n            }\n            { !this.props.loggedIn? \n              <Link to='/login'>\n                <button>LOGIN</button>\n              </Link>\n              :\n              <Link to='/signout'>\n                <button onClick={this.props.killSession}>LOGOUT</button>\n              </Link>\n            }\n          </div>\n        </div>\n        <div className=\"body-container\">\n          { !loggedIn ?\n            <div className=\"welcome-container\">\n              Welcome to Proline Time!\n              <p className=\"introduce-container\">Login or Sign Up to get started!</p>\n              <p className=\"introduce-container1\">Proline Time&copy; is a web application where employees can keep track of the hours they work.</p>\n            </div>\n            \n            :\n\n            <div className=\"total-hours\">\n              <div className=\"total\">\n                <div className=\"total-box\">\n                  <div className=\"total-title\">\n                    TOTAL HOURS:\n                  </div>\n                  <div className=\"hours-display\">\n                    {totalHours.hh} hours {totalHours.mm} minutes\n                  </div>\n                </div>\n              </div>\n              <div className=\"timeclock-container\">\n                <div className=\"time-buttons-box\">\n                  <div className=\"time-button-container\">\n                    <button className=\"time-button\" onClick={handleClockIn}>CLOCK IN</button>\n                    <button className=\"time-button\" onClick={handleClockOut}>CLOCK OUT</button>\n                  </div>\n                  <div className=\"status-box\">\n                    <div className=\"status-container\">\n                      { clockedIn === true ?\n                        <div style={clockedInStyle}>CLOCKED IN</div>\n                        :\n                        <div style={clockedOutStyle}>CLOCKED OUT</div>\n                      }\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\n\n","import React, { Component } from 'react';\n// import axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport './login.css';\n\n\nexport default class Login extends Component {\n \n    onKeyPress = (e) => {\n        if (e.which === 13) {\n            this.props.handleLogin();\n        }\n    }\n    \n    render() {\n        const { username, password } = this.props;\n        return (\n            <div className=\"login-body\">\n                <div className=\"login-modal\">\n                    <div className=\"login-title\">EMPLOYEE LOGIN</div>\n    \n                    <input type=\"text\" placeholder=\"username\" onChange={this.props.handleChange} name=\"username\" value={username} />\n                    <input type=\"password\" placeholder=\"password\" onChange={this.props.handleChange} onKeyPress={this.onKeyPress} name=\"password\" value={password} />\n                    \n                    <div className=\"buttons\">\n                        <button className='login-button' onClick={this.props.handleLogin}>LOGIN</button>\n                        <Link to='/signup'>\n                            <button className='signup-button'>SIGN UP</button>\n                        </Link>\n                    </div>\n                </div>\n                \n            </div>\n        );\n    }\n    \n}\n\n\n","import React, { Component } from 'react';\n// import axios from 'axios';\n// import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './signup.css';\n\n\nexport default class Signup extends Component {\n\n    // state = {\n    //     username: '',\n    // }\n    \n    \n    \n    render() {\n        const { firstName, lastName, username, password } = this.props;\n        return (\n            <div className=\"signup-body\">\n                <div className=\"signup-modal\">\n                    <div className=\"login-title\">SIGNUP</div>\n    \n                    <input type=\"text\" placeholder=\"FIRST NAME\" onChange={this.props.handleChange} name=\"firstName\" value={firstName} />\n                    <input type=\"text\" placeholder=\"LAST NAME\" onChange={this.props.handleChange} name=\"lastName\" value={lastName} />\n                    <input type=\"text\" placeholder=\"USERNAME\" onChange={this.props.handleChange} name=\"username\" value={username} />\n                    <input type=\"password\" placeholder=\"PASSWORD\" onChange={this.props.handleChange} name=\"password\" value={password} />\n                    \n                    <div className=\"buttons\">\n                        {/* <span>LOGIN</span> */}\n                        <button className=\"sigup-button\" onClick={this.props.handleSignup}>SIGN UP</button>\n                    </div>\n                </div>\n                \n            </div>\n        );\n    }\n    \n    \n}\n\n\n","import React, { Component } from 'react';\n// import axios from 'axios';\nimport moment from 'moment';\nimport { Link } from 'react-router-dom';\nimport './timecard.css';\n\n\nexport default class Timecard extends Component {\n \n    componentDidMount() {\n        this.props.getThoseHours();\n    }\n    \n    render() {\n        const { loggedIn, firstName, lastName, hours } = this.props;\n        \n\n\n        // const newDateFormat = toDateString(hours.timeIn);\n\n        const timeMap = this.props.hours.map((day, i) => {\n            let timeIn = new moment(day.timeIn);\n            let timeOut = new moment(day.timeOut);\n            // let total = moment.duration(timeOut.diff(timeIn), 'milliseconds').format('HH:mm:ss');\n            let total = moment.duration(timeOut.diff(timeIn));\n            // let days = total.days()\n            let hh = total.hours();\n            let mm = total.minutes();\n            let ss = total.seconds();\n            console.log(timeOut);\n            return (\n                <tr>\n                    <td>\n                        {moment(timeIn).format('MM-DD-YYYY')}\n                    </td>\n                    <td>\n                        {moment(timeIn).format('hh:mm A')}\n                    </td>\n                    <td>\n                        { day.timeOut ? moment(timeOut).format('hh:mm A') : '-' }\n                    </td>\n                    <td>\n                        { day.timeOut ? `${hh}.${mm} hours` : '-' }\n                    </td>\n                    \n                </tr>\n            )\n        })\n        \n        console.log(hours[0])\n\n        return (\n            <div className=\"timecard-body\">\n                <div className=\"header-container\">\n                    {!loggedIn ?\n                        <div className=\"navbar-left\">EMPLOYEE TIME</div>\n                        :   \n                        <div className=\"navbar-left\">{firstName} {lastName}</div>\n                    }\n                    <div className=\"navbar-right\">\n                        <Link to='/'>\n                            <button>HOME</button>\n                        </Link>\n                        { !loggedIn ?\n                        <Link to='/about'>\n                            <button>ABOUT</button>\n                        </Link>\n                        : \n                        <Link to='/timecard'>\n                            <button>TIMECARD</button>\n                        </Link>\n                        }\n                        { !this.props.loggedIn? \n                        <Link to='/login'>\n                            <button>LOGIN</button>\n                        </Link>\n                        :\n                        <Link to='/signout'>\n                            <button onClick={this.props.killSession}>LOGOUT</button>\n                        </Link>\n                        }\n                    </div>\n                </div>\n                <div className=\"timecard-content\">\n                    <table>\n                        <tbody>\n                            <tr>\n                                <th>DATE</th>\n                                <th>TIME IN</th>\n                                <th>TIME OUT</th>\n                                <th>TOTAL</th>\n                            </tr>\n                            {timeMap}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        );\n    }\n    \n}\n\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport moment from 'moment';\nimport { Switch, Route, withRouter } from \"react-router-dom\";\nimport \"./reset.css\";\nimport \"./App.css\";\nimport Main from \"./Components/Main/Main\";\nimport Login from \"./Components/Login/Login\";\nimport Signup from \"./Components/Signup/Signup\";\nimport Timecard from './Components/Main/Timecard/Timecard';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      employeeId: '',\n      firstName: \"\",\n      lastName: \"\",\n      username: \"\",\n      password: \"\",\n      loggedIn: false,\n      hours: [\n        { date: '', timeIn: '', timeOut: '' }\n      ],\n      clockedIn: false,\n      clockedOut: true,\n      totalHours: '',\n      adminUser: false\n    };\n  }\n\n  componentDidMount() {\n      axios.get('/user').then(response => {\n        const user = response.data;\n        if(user) {\n          this.setState({\n            employeeId: user.user_id,\n            firstName: user.first_name,\n            lastName: user.last_name,\n            username: user.username,\n            loggedIn: true,\n          })\n        }\n        if(user.admin_user=== true) this.setState({ adminUser: true})\n      if (this.state.loggedIn === true) {\n        this.getThoseHours();\n        this.displayTotalHours();\n      };\n  \n      axios.get('/time-status').then(response => {\n        console.log('time status`')\n        const status = response.data;\n        if(status) {\n          this.setState({\n            clockedIn: true,\n            clockedOut: false\n          })\n        }\n      }).catch(error => {\n      console.log('something brokeded')\n      console.log(error)\n      })\n    }).catch(error => {\n            console.log('something brokeded')\n            console.log(error)\n    })\n\n\n    // let promises = [];\n    //   promises.push(axios.get('/user'))\n    //   promises.push(axios.get('/hours'))\n    //   promises.push(axios.get('/time-status'))\n\n    // // Promise.all([\n    // //   axios.get('/user'),\n    // //   axios.get('/hours'),\n    // //   axios.get('/time-status')\n    // // ])\n   \n    // .then(response => {\n    //   console.log('we in it')\n    //   const user = response[0].data;\n    //   const hours = response[1].data.map(e => ({ timeIn: e.time_in, timeOut: e.time_out }));\n    //   const status = response[2].data;\n    //   console.log(response.data)\n\n    //   this.setState({\n    //     employeeId: user.user_id,\n    //     firstName: user.first_name,\n    //     lastName: user.last_name,\n    //     username: user.username,\n    //     loggedIn: true,\n    //     hours: hours\n    //   })\n\n    //   if(status) {\n    //     this.setState({\n    //       clockedIn: true,\n    //       clockedOut: false\n    //     })\n    //   }\n    //   debugger\n    // }).catch(error => {\n    //   console.log('something brokeded')\n    //   console.log(error)\n    // })\n  }\n\n  handleChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  handleSignup = async () => {\n    try {\n      const body = {\n        firstName: this.state.firstName,\n        lastName: this.state.lastName,\n        username: this.state.username,\n        password: this.state.password\n      };\n\n      const { data: signupMessage } = await axios.post(\"/signup\", body);\n\n      this.props.history.push(\"/login\");\n      alert(\"Successfully signed up! Please login.\");\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  handleLogin = async () => {\n    try {\n      const { firstName, lastName, username, password } = this.state;\n      const body = {\n        firstName: firstName,\n        lastName: lastName,\n        username: username,\n        password: password\n      };\n\n      const loginResponse = await axios.post(\"/login\", body);\n\n      const { user, message } = loginResponse.data;\n      console.log(user);\n      if (!this.state.loggedIn) {\n        this.getThoseHours();\n        this.setState({\n          loggedIn: !this.state.loggedIn,\n          firstName: user.first_name,\n          lastName: user.last_name,\n          employeeId: user.user_id\n        });\n        if(user.admin_user === true) {\n          this.setState({ adminUser: true });\n        }\n        await axios.get('/time-status').then(response => {\n          console.log('time status`')\n          const status = response.data;\n          if(status) {\n            this.setState({\n              clockedIn: true,\n              clockedOut: false\n            })\n          }\n        }).catch(error => {\n        console.log('something brokeded')\n        console.log(error)\n        })\n      }\n      \n      this.displayTotalHours();\n      this.props.history.push(\"/\");\n      alert(message);\n    } catch (error) {\n      // console.log(error.response.data);\n      alert(error.response.data);\n    }\n  };\n  killSession = async () => {\n    try {\n      if (this.state.loggedIn)\n        this.setState({ \n          loggedIn: !this.state.loggedIn,\n          employeeId: '',\n          firstName: \"\",\n          lastName: \"\",\n          username: \"\",\n          password: \"\",\n          hours: \"\"\n        });\n\n      const { data: signoutMessage } = await axios.get(\"/signout\");\n\n      this.props.history.push(\"/\");\n      alert(\"Successfully logged out!\");\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  handleClockIn = () => {\n    console.log('sdfghj')\n    const { clockedIn, clockedOut, firstName, lastName, employeeId } = this.state;\n    if (clockedIn === false && clockedOut === true) {\n      const body = { \n        firstName,\n        lastName,\n        employeeId,\n        clockedInAt: moment().format('LLL') //8-24-2019 \n      }\n      axios.post('/clock-in', body)\n      .then(() => {\n       this.getThoseHours();\n       this.setState({\n         clockedIn: true,\n         clockedOut: false\n       })\n      })\n      \n      \n    }\n  }\n\n  handleClockOut = () => {\n    console.log('hit clock out function');\n    const { clockedIn, clockedOut, firstName, lastName, employeeId } = this.state;\n\n    if (clockedIn === true && clockedOut === false) {\n      const body = {\n        firstName,\n        lastName,\n        employeeId,\n        clockedOutAt: moment().format('LLL')\n      }\n\n      axios.put('/clock-out', body)\n      .then(() => {\n        this.getThoseHours();\n        this.displayTotalHours();\n        this.setState({\n          clockedIn: false,\n          clockedOut: true\n        })\n      })\n    }\n  };\n\n  getThoseHours = () => {\n    axios.get('/hours').then(response => {\n      const hours = response.data.map(e => ({ timeIn: e.time_in, timeOut: e.time_out }));\n      this.setState({\n        hours: hours\n      })\n    }).catch(error => {\n    console.log('something brokeded')\n    console.log(error)\n    });\n  }\n\n  displayTotalHours = () => {\n    console.log('total hours please?')\n    const body = {\n      user_id: this.state.employeeId\n    }\n    axios.get('total-hours', body).then((response) => {\n      this.setState({totalHours: response.data});\n    }).catch(error => console.log(error))\n  }\n\n\n\n\n  render() {\n    console.log(this.state);\n    console.log(this.props);\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\" component={Main}>\n            <Main loggedIn={this.state.loggedIn}\n                  firstName={this.state.firstName}\n                  lastName={this.state.lastName}\n                  killSession={this.killSession}\n                  employeeId={this.state.employeeId}\n                  clockedIn={this.state.clockedIn}\n                  clockedOut={this.state.clockedOut}\n                  handleClockIn={this.handleClockIn}\n                  handleClockOut={this.handleClockOut}\n                  totalHours={this.state.totalHours}\n                  adminUser={this.state.adminUser}\n            />\n          </Route>\n          <Route path=\"/timecard\" render={(props) => \n            <Timecard loggedIn={this.state.loggedIn}\n                      firstName={this.state.firstName}\n                      lastName={this.state.lastName}\n                      killSession={this.killSession}\n                      employeeId={this.state.employeeId}\n                      timeIn={this.state.timeIn}\n                      timeOut={this.state.timeOut}\n                      clockedIn={this.state.clockedIn}\n                      clockedOut={this.state.clockedOut}\n                      hours={this.state.hours}\n                      getThoseHours={this.getThoseHours}\n              />}>\n            \n          </Route>\n          <Route path=\"/login\" component={Login}>\n            <Login handleChange={this.handleChange}\n                   handleLogin={this.handleLogin}\n            />\n          </Route>\n          <Route path=\"/signup\" component={Signup}>\n            <Signup handleChange={this.handleChange}\n                    handleSignup={this.handleSignup}\n            />\n          </Route>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}